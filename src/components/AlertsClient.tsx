"use client";

import { Header } from "@/components/Header";
import { AlertTriangle, User, MapPin, Clock } from "lucide-react";
import Link from 'next/link';
import { useRouter } from "next/navigation";

// Define the shape of our alert data prop
type Alert = {
    user: { id: number; fullName: string | null; externalId: string | null; };
    lastSeen: string;
    lastLocation: string;
    alertType: string;
    severity: string;
};

export function AlertsClient({ alerts }: { alerts: Alert[] }) {
    const router = useRouter();

    const timeSince = (date: string) => {
        const seconds = Math.floor((new Date().getTime() - new Date(date).getTime()) / 1000);
        if (seconds < 0) return "just now";
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        return `${hours}h ${minutes}m ago`;
    };

    // When a user is selected from the header, navigate to their dashboard
    const handleUserSelect = (userId: number) => {
        router.push(`/dashboard?userId=${userId}`);
    };

    return (
        <div className="bg-gradient-to-br from-gray-900 to-slate-800 text-gray-100 min-h-screen">
            <Header onUserSelect={handleUserSelect} />
            <main className="container mx-auto px-6 pt-24 pb-12">
                <div className="flex items-center gap-4 mb-8">
                    <AlertTriangle className="w-10 h-10 text-yellow-400" />
                    <div>
                        <h1 className="text-4xl font-bold">Active Alerts</h1>
                        <p className="text-lg text-gray-400">Proactive alerts generated by the system.</p>
                    </div>
                </div>
                <div className="bg-gray-800/50 border border-gray-700 rounded-lg">
                    <div className="p-4 border-b border-gray-700">
                        <h2 className="font-semibold">Inactivity Alerts ({alerts.length})</h2>
                    </div>
                    <div className="divide-y divide-gray-700">
                        {alerts.length > 0 ? (
                            alerts.map((alert) => (
                                <div key={alert.user.id} className="p-4 hover:bg-gray-700/50 transition-colors">
                                    <div className="flex justify-between items-center flex-wrap gap-4">
                                        <div className="flex items-center gap-4">
                                            <User className="w-6 h-6 text-gray-400 flex-shrink-0" />
                                            <div>
                                                <Link href={`/dashboard?userId=${alert.user.id}`} className="font-semibold text-lg hover:underline">
                                                    {alert.user.fullName} ({alert.user.externalId})
                                                </Link>
                                                <p className="text-sm text-yellow-400">{alert.severity}: Not seen for more than 12 hours</p>
                                            </div>
                                        </div>
                                        <div className="text-right text-sm">
                                             <div className="flex items-center justify-end gap-2 text-gray-400">
                                                <MapPin size={14} />
                                                <span>{alert.lastLocation}</span>
                                             </div>
                                             <div className="flex items-center justify-end gap-2 text-gray-400 mt-1">
                                                <Clock size={14} />
                                                <span>Last seen {timeSince(alert.lastSeen)}</span>
                                             </div>
                                        </div>
                                    </div>
                                </div>
                            ))
                        ) : (
                            <p className="p-4 text-gray-500">No inactivity alerts at this time.</p>
                        )}
                    </div>
                </div>
            </main>
        </div>
    );
}